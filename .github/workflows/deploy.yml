name: Deploy


env:
  BP_MODE_LOWERCASE: production
  BP_MODE : PRODUCTION
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
  GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
  CONFIGURATION_SERVER_USERNAME: ${{ secrets.CONFIGURATION_SERVER_USERNAME }}
  CONFIGURATION_SERVER_PASSWORD: ${{ secrets.CONFIGURATION_SERVER_PASSWORD }}
  GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
  CONFIGURATION_SERVER_URI: https://configuration.bootifulpodcast.fm
  # CONFIGURATION_SERVER_URI_PRODUCTION: https://configuration.bootifulpodcast.fm
  # CONFIGURATION_SERVER_URI_DEVELOPMENT: https://configuration.development.bootifulpodcast.fm
  GKE_CLUSTER : ${{ secrets.GKE_CLUSTER_NAME_PRODUCTION }}
  # GKE_CLUSTER_NAME_DEVELOPMENT:    ${{ secrets.GKE_CLUSTER_NAME_DEVELOPMENT }}
  # GCLOUD_ZONE_DEVELOPMENT: ${{ secrets.GCLOUD_ZONE_DEVELOPMENT }}
  GCLOUD_ZONE : ${{ secrets.GCLOUD_ZONE_PRODUCTION }}
  # GCLOUD_PROJECT_DEVELOPMENT: ${{ secrets.GCLOUD_PROJECT_DEVELOPMENT }}
  GCLOUD_PROJECT : ${{ secrets.GCLOUD_PROJECT_DEVELOPMENT }}
  # GCLOUD_SA_KEY: ${{ secrets.GCLOUD_SA_KEY }}

on:
  repository_dispatch:
    types: [ deploy-production-event, deploy-development-event ]
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    permissions:
      contents: 'read'
      id-token: 'write'

    name: Setup and Deploy

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      
      # - uses: bootiful-podcast/bp-mode-github-action@v36

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-


      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17


      - uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ env.GKE_CLUSTER  }}'
          location: '${{ env.GKE_ZONE }}'

      - run: |
          gcloud config set project $GCLOUD_PROJECT 
          gcloud --quiet auth configure-docker
          kubectl get pods

      # todo factor this into its own separate github action!
      - name: Discover Spring Cloud Config Server 
        run: |
          kubectl get deployments
          echo $BP_MODE_LOWERCASE
          CONFIG_IP=$( kubectl get svc configuration -n $BP_MODE_LOWERCASE --output="jsonpath={.status.loadBalancer.ingress[0].ip}" )
          echo "The configuration service lives at ${CONFIG_IP}. "
          echo "CONFIGURATION_SERVER_HOST=${CONFIG_IP}" >> $GITHUB_ENV

      - uses: joshlong/config-client-github-action@v29
        with:
          config-server-uri: http://${CONFIGURATION_SERVER_HOST}
          config-server-username: ${{ secrets.CONFIGURATION_SERVER_USERNAME  }}
          config-server-password: ${{ secrets.CONFIGURATION_SERVER_PASSWORD  }}
          config-server-application-id: deployment
          config-server-profile: ${{ env.BP_MODE_LOWERCASE }}


      - name: Deploy API
        run: |
          cd $GITHUB_WORKSPACE
          ./deploy/deploy.sh
